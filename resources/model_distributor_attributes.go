/*
Cifra SSO REST API

SSO REST API for Cifra app

API version: 0.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package resources

import (
	"encoding/json"
	"time"
	"bytes"
	"fmt"
)

// checks if the DistributorAttributes type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DistributorAttributes{}

// DistributorAttributes struct for DistributorAttributes
type DistributorAttributes struct {
	// URL to the distributor's icon image.
	Icon string `json:"icon"`
	// The name of the distributor.
	Name string `json:"name"`
	// The current status of the distributor (e.g., active, inactive).
	Status string `json:"status"`
	// The timestamp of the last update to the distributor's information.
	UpdatedAt time.Time `json:"updated_at"`
	CreatedAt time.Time `json:"created_at"`
}

type _DistributorAttributes DistributorAttributes

// NewDistributorAttributes instantiates a new DistributorAttributes object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDistributorAttributes(icon string, name string, status string, updatedAt time.Time, createdAt time.Time) *DistributorAttributes {
	this := DistributorAttributes{}
	this.Icon = icon
	this.Name = name
	this.Status = status
	this.UpdatedAt = updatedAt
	this.CreatedAt = createdAt
	return &this
}

// NewDistributorAttributesWithDefaults instantiates a new DistributorAttributes object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDistributorAttributesWithDefaults() *DistributorAttributes {
	this := DistributorAttributes{}
	return &this
}

// GetIcon returns the Icon field value
func (o *DistributorAttributes) GetIcon() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Icon
}

// GetIconOk returns a tuple with the Icon field value
// and a boolean to check if the value has been set.
func (o *DistributorAttributes) GetIconOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Icon, true
}

// SetIcon sets field value
func (o *DistributorAttributes) SetIcon(v string) {
	o.Icon = v
}

// GetName returns the Name field value
func (o *DistributorAttributes) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *DistributorAttributes) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *DistributorAttributes) SetName(v string) {
	o.Name = v
}

// GetStatus returns the Status field value
func (o *DistributorAttributes) GetStatus() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *DistributorAttributes) GetStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *DistributorAttributes) SetStatus(v string) {
	o.Status = v
}

// GetUpdatedAt returns the UpdatedAt field value
func (o *DistributorAttributes) GetUpdatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value
// and a boolean to check if the value has been set.
func (o *DistributorAttributes) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UpdatedAt, true
}

// SetUpdatedAt sets field value
func (o *DistributorAttributes) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = v
}

// GetCreatedAt returns the CreatedAt field value
func (o *DistributorAttributes) GetCreatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *DistributorAttributes) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *DistributorAttributes) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

func (o DistributorAttributes) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DistributorAttributes) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["icon"] = o.Icon
	toSerialize["name"] = o.Name
	toSerialize["status"] = o.Status
	toSerialize["updated_at"] = o.UpdatedAt
	toSerialize["created_at"] = o.CreatedAt
	return toSerialize, nil
}

func (o *DistributorAttributes) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"icon",
		"name",
		"status",
		"updated_at",
		"created_at",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varDistributorAttributes := _DistributorAttributes{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varDistributorAttributes)

	if err != nil {
		return err
	}

	*o = DistributorAttributes(varDistributorAttributes)

	return err
}

type NullableDistributorAttributes struct {
	value *DistributorAttributes
	isSet bool
}

func (v NullableDistributorAttributes) Get() *DistributorAttributes {
	return v.value
}

func (v *NullableDistributorAttributes) Set(val *DistributorAttributes) {
	v.value = val
	v.isSet = true
}

func (v NullableDistributorAttributes) IsSet() bool {
	return v.isSet
}

func (v *NullableDistributorAttributes) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDistributorAttributes(val *DistributorAttributes) *NullableDistributorAttributes {
	return &NullableDistributorAttributes{value: val, isSet: true}
}

func (v NullableDistributorAttributes) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDistributorAttributes) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


