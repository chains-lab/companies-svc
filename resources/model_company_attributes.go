/*
Cifra SSO REST API

SSO REST API for Cifra app

API version: 0.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package resources

import (
	"encoding/json"
	"time"
	"bytes"
	"fmt"
)

// checks if the CompanyAttributes type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CompanyAttributes{}

// CompanyAttributes struct for CompanyAttributes
type CompanyAttributes struct {
	// URL to the company's icon image.
	Icon string `json:"icon"`
	// The name of the company.
	Name string `json:"name"`
	// The current status of the company (e.g., active, inactive).
	Status string `json:"status"`
	// The timestamp of the last update to the company's information.
	UpdatedAt time.Time `json:"updated_at"`
	CreatedAt time.Time `json:"created_at"`
}

type _CompanyAttributes CompanyAttributes

// NewCompanyAttributes instantiates a new CompanyAttributes object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCompanyAttributes(icon string, name string, status string, updatedAt time.Time, createdAt time.Time) *CompanyAttributes {
	this := CompanyAttributes{}
	this.Icon = icon
	this.Name = name
	this.Status = status
	this.UpdatedAt = updatedAt
	this.CreatedAt = createdAt
	return &this
}

// NewCompanyAttributesWithDefaults instantiates a new CompanyAttributes object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCompanyAttributesWithDefaults() *CompanyAttributes {
	this := CompanyAttributes{}
	return &this
}

// GetIcon returns the Icon field value
func (o *CompanyAttributes) GetIcon() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Icon
}

// GetIconOk returns a tuple with the Icon field value
// and a boolean to check if the value has been set.
func (o *CompanyAttributes) GetIconOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Icon, true
}

// SetIcon sets field value
func (o *CompanyAttributes) SetIcon(v string) {
	o.Icon = v
}

// GetName returns the Name field value
func (o *CompanyAttributes) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *CompanyAttributes) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *CompanyAttributes) SetName(v string) {
	o.Name = v
}

// GetStatus returns the Status field value
func (o *CompanyAttributes) GetStatus() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *CompanyAttributes) GetStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *CompanyAttributes) SetStatus(v string) {
	o.Status = v
}

// GetUpdatedAt returns the UpdatedAt field value
func (o *CompanyAttributes) GetUpdatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value
// and a boolean to check if the value has been set.
func (o *CompanyAttributes) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UpdatedAt, true
}

// SetUpdatedAt sets field value
func (o *CompanyAttributes) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = v
}

// GetCreatedAt returns the CreatedAt field value
func (o *CompanyAttributes) GetCreatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *CompanyAttributes) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *CompanyAttributes) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

func (o CompanyAttributes) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CompanyAttributes) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["icon"] = o.Icon
	toSerialize["name"] = o.Name
	toSerialize["status"] = o.Status
	toSerialize["updated_at"] = o.UpdatedAt
	toSerialize["created_at"] = o.CreatedAt
	return toSerialize, nil
}

func (o *CompanyAttributes) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"icon",
		"name",
		"status",
		"updated_at",
		"created_at",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCompanyAttributes := _CompanyAttributes{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCompanyAttributes)

	if err != nil {
		return err
	}

	*o = CompanyAttributes(varCompanyAttributes)

	return err
}

type NullableCompanyAttributes struct {
	value *CompanyAttributes
	isSet bool
}

func (v NullableCompanyAttributes) Get() *CompanyAttributes {
	return v.value
}

func (v *NullableCompanyAttributes) Set(val *CompanyAttributes) {
	v.value = val
	v.isSet = true
}

func (v NullableCompanyAttributes) IsSet() bool {
	return v.isSet
}

func (v *NullableCompanyAttributes) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCompanyAttributes(val *CompanyAttributes) *NullableCompanyAttributes {
	return &NullableCompanyAttributes{value: val, isSet: true}
}

func (v NullableCompanyAttributes) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCompanyAttributes) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


