/*
Cifra SSO REST API

SSO REST API for Cifra app

API version: 0.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package resources

import (
	"encoding/json"
	"github.com/google/uuid"
	"time"
	"bytes"
	"fmt"
)

// checks if the InviteAttributes type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &InviteAttributes{}

// InviteAttributes struct for InviteAttributes
type InviteAttributes struct {
	// status of the invite
	Status string `json:"status"`
	// role of the user in this city
	Role string `json:"role"`
	// company id
	CompanyId uuid.UUID `json:"company_id"`
	// unique token for the invite
	Token string `json:"token"`
	// timestamp when the invite will expire
	ExpiresAt time.Time `json:"expires_at"`
	// timestamp when the invite was created
	CreatedAt time.Time `json:"created_at"`
}

type _InviteAttributes InviteAttributes

// NewInviteAttributes instantiates a new InviteAttributes object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInviteAttributes(status string, role string, companyId uuid.UUID, token string, expiresAt time.Time, createdAt time.Time) *InviteAttributes {
	this := InviteAttributes{}
	this.Status = status
	this.Role = role
	this.CompanyId = companyId
	this.Token = token
	this.ExpiresAt = expiresAt
	this.CreatedAt = createdAt
	return &this
}

// NewInviteAttributesWithDefaults instantiates a new InviteAttributes object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInviteAttributesWithDefaults() *InviteAttributes {
	this := InviteAttributes{}
	return &this
}

// GetStatus returns the Status field value
func (o *InviteAttributes) GetStatus() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *InviteAttributes) GetStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *InviteAttributes) SetStatus(v string) {
	o.Status = v
}

// GetRole returns the Role field value
func (o *InviteAttributes) GetRole() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Role
}

// GetRoleOk returns a tuple with the Role field value
// and a boolean to check if the value has been set.
func (o *InviteAttributes) GetRoleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Role, true
}

// SetRole sets field value
func (o *InviteAttributes) SetRole(v string) {
	o.Role = v
}

// GetCompanyId returns the CompanyId field value
func (o *InviteAttributes) GetCompanyId() uuid.UUID {
	if o == nil {
		var ret uuid.UUID
		return ret
	}

	return o.CompanyId
}

// GetCompanyIdOk returns a tuple with the CompanyId field value
// and a boolean to check if the value has been set.
func (o *InviteAttributes) GetCompanyIdOk() (*uuid.UUID, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CompanyId, true
}

// SetCompanyId sets field value
func (o *InviteAttributes) SetCompanyId(v uuid.UUID) {
	o.CompanyId = v
}

// GetToken returns the Token field value
func (o *InviteAttributes) GetToken() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Token
}

// GetTokenOk returns a tuple with the Token field value
// and a boolean to check if the value has been set.
func (o *InviteAttributes) GetTokenOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Token, true
}

// SetToken sets field value
func (o *InviteAttributes) SetToken(v string) {
	o.Token = v
}

// GetExpiresAt returns the ExpiresAt field value
func (o *InviteAttributes) GetExpiresAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.ExpiresAt
}

// GetExpiresAtOk returns a tuple with the ExpiresAt field value
// and a boolean to check if the value has been set.
func (o *InviteAttributes) GetExpiresAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ExpiresAt, true
}

// SetExpiresAt sets field value
func (o *InviteAttributes) SetExpiresAt(v time.Time) {
	o.ExpiresAt = v
}

// GetCreatedAt returns the CreatedAt field value
func (o *InviteAttributes) GetCreatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *InviteAttributes) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *InviteAttributes) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

func (o InviteAttributes) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o InviteAttributes) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["status"] = o.Status
	toSerialize["role"] = o.Role
	toSerialize["company_id"] = o.CompanyId
	toSerialize["token"] = o.Token
	toSerialize["expires_at"] = o.ExpiresAt
	toSerialize["created_at"] = o.CreatedAt
	return toSerialize, nil
}

func (o *InviteAttributes) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"status",
		"role",
		"company_id",
		"token",
		"expires_at",
		"created_at",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varInviteAttributes := _InviteAttributes{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varInviteAttributes)

	if err != nil {
		return err
	}

	*o = InviteAttributes(varInviteAttributes)

	return err
}

type NullableInviteAttributes struct {
	value *InviteAttributes
	isSet bool
}

func (v NullableInviteAttributes) Get() *InviteAttributes {
	return v.value
}

func (v *NullableInviteAttributes) Set(val *InviteAttributes) {
	v.value = val
	v.isSet = true
}

func (v NullableInviteAttributes) IsSet() bool {
	return v.isSet
}

func (v *NullableInviteAttributes) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInviteAttributes(val *InviteAttributes) *NullableInviteAttributes {
	return &NullableInviteAttributes{value: val, isSet: true}
}

func (v NullableInviteAttributes) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInviteAttributes) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


