/*
Cifra SSO REST API

SSO REST API for Cifra app

API version: 0.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package resources

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CreateDistributorBlockDataAttributes type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateDistributorBlockDataAttributes{}

// CreateDistributorBlockDataAttributes struct for CreateDistributorBlockDataAttributes
type CreateDistributorBlockDataAttributes struct {
	// The UUID of the distributor to be blocked.
	DistributorId string `json:"distributor_id"`
	// The reason for blocking the distributor.
	Reason string `json:"reason"`
}

type _CreateDistributorBlockDataAttributes CreateDistributorBlockDataAttributes

// NewCreateDistributorBlockDataAttributes instantiates a new CreateDistributorBlockDataAttributes object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateDistributorBlockDataAttributes(distributorId string, reason string) *CreateDistributorBlockDataAttributes {
	this := CreateDistributorBlockDataAttributes{}
	this.DistributorId = distributorId
	this.Reason = reason
	return &this
}

// NewCreateDistributorBlockDataAttributesWithDefaults instantiates a new CreateDistributorBlockDataAttributes object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateDistributorBlockDataAttributesWithDefaults() *CreateDistributorBlockDataAttributes {
	this := CreateDistributorBlockDataAttributes{}
	return &this
}

// GetDistributorId returns the DistributorId field value
func (o *CreateDistributorBlockDataAttributes) GetDistributorId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DistributorId
}

// GetDistributorIdOk returns a tuple with the DistributorId field value
// and a boolean to check if the value has been set.
func (o *CreateDistributorBlockDataAttributes) GetDistributorIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DistributorId, true
}

// SetDistributorId sets field value
func (o *CreateDistributorBlockDataAttributes) SetDistributorId(v string) {
	o.DistributorId = v
}

// GetReason returns the Reason field value
func (o *CreateDistributorBlockDataAttributes) GetReason() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Reason
}

// GetReasonOk returns a tuple with the Reason field value
// and a boolean to check if the value has been set.
func (o *CreateDistributorBlockDataAttributes) GetReasonOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Reason, true
}

// SetReason sets field value
func (o *CreateDistributorBlockDataAttributes) SetReason(v string) {
	o.Reason = v
}

func (o CreateDistributorBlockDataAttributes) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateDistributorBlockDataAttributes) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["distributor_id"] = o.DistributorId
	toSerialize["reason"] = o.Reason
	return toSerialize, nil
}

func (o *CreateDistributorBlockDataAttributes) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"distributor_id",
		"reason",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreateDistributorBlockDataAttributes := _CreateDistributorBlockDataAttributes{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCreateDistributorBlockDataAttributes)

	if err != nil {
		return err
	}

	*o = CreateDistributorBlockDataAttributes(varCreateDistributorBlockDataAttributes)

	return err
}

type NullableCreateDistributorBlockDataAttributes struct {
	value *CreateDistributorBlockDataAttributes
	isSet bool
}

func (v NullableCreateDistributorBlockDataAttributes) Get() *CreateDistributorBlockDataAttributes {
	return v.value
}

func (v *NullableCreateDistributorBlockDataAttributes) Set(val *CreateDistributorBlockDataAttributes) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateDistributorBlockDataAttributes) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateDistributorBlockDataAttributes) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateDistributorBlockDataAttributes(val *CreateDistributorBlockDataAttributes) *NullableCreateDistributorBlockDataAttributes {
	return &NullableCreateDistributorBlockDataAttributes{value: val, isSet: true}
}

func (v NullableCreateDistributorBlockDataAttributes) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateDistributorBlockDataAttributes) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


