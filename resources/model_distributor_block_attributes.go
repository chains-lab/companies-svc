/*
Cifra SSO REST API

SSO REST API for Cifra app

API version: 0.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package resources

import (
	"encoding/json"
	"github.com/google/uuid"
	"time"
	"bytes"
	"fmt"
)

// checks if the DistributorBlockAttributes type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DistributorBlockAttributes{}

// DistributorBlockAttributes struct for DistributorBlockAttributes
type DistributorBlockAttributes struct {
	// ID of the distributor being blocked
	DistributorId uuid.UUID `json:"distributor_id"`
	// ID of the user who initiated the block
	InitiatorId uuid.UUID `json:"initiator_id"`
	// Reason for blocking the distributor
	Reason string `json:"reason"`
	// Current status of the block
	Status string `json:"status"`
	// Timestamp when the block was initiated
	BlockedAt time.Time `json:"blocked_at"`
	// Timestamp when the block was lifted, if applicable
	CancelledAt *time.Time `json:"cancelled_at,omitempty"`
}

type _DistributorBlockAttributes DistributorBlockAttributes

// NewDistributorBlockAttributes instantiates a new DistributorBlockAttributes object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDistributorBlockAttributes(distributorId uuid.UUID, initiatorId uuid.UUID, reason string, status string, blockedAt time.Time) *DistributorBlockAttributes {
	this := DistributorBlockAttributes{}
	this.DistributorId = distributorId
	this.InitiatorId = initiatorId
	this.Reason = reason
	this.Status = status
	this.BlockedAt = blockedAt
	return &this
}

// NewDistributorBlockAttributesWithDefaults instantiates a new DistributorBlockAttributes object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDistributorBlockAttributesWithDefaults() *DistributorBlockAttributes {
	this := DistributorBlockAttributes{}
	return &this
}

// GetDistributorId returns the DistributorId field value
func (o *DistributorBlockAttributes) GetDistributorId() uuid.UUID {
	if o == nil {
		var ret uuid.UUID
		return ret
	}

	return o.DistributorId
}

// GetDistributorIdOk returns a tuple with the DistributorId field value
// and a boolean to check if the value has been set.
func (o *DistributorBlockAttributes) GetDistributorIdOk() (*uuid.UUID, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DistributorId, true
}

// SetDistributorId sets field value
func (o *DistributorBlockAttributes) SetDistributorId(v uuid.UUID) {
	o.DistributorId = v
}

// GetInitiatorId returns the InitiatorId field value
func (o *DistributorBlockAttributes) GetInitiatorId() uuid.UUID {
	if o == nil {
		var ret uuid.UUID
		return ret
	}

	return o.InitiatorId
}

// GetInitiatorIdOk returns a tuple with the InitiatorId field value
// and a boolean to check if the value has been set.
func (o *DistributorBlockAttributes) GetInitiatorIdOk() (*uuid.UUID, bool) {
	if o == nil {
		return nil, false
	}
	return &o.InitiatorId, true
}

// SetInitiatorId sets field value
func (o *DistributorBlockAttributes) SetInitiatorId(v uuid.UUID) {
	o.InitiatorId = v
}

// GetReason returns the Reason field value
func (o *DistributorBlockAttributes) GetReason() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Reason
}

// GetReasonOk returns a tuple with the Reason field value
// and a boolean to check if the value has been set.
func (o *DistributorBlockAttributes) GetReasonOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Reason, true
}

// SetReason sets field value
func (o *DistributorBlockAttributes) SetReason(v string) {
	o.Reason = v
}

// GetStatus returns the Status field value
func (o *DistributorBlockAttributes) GetStatus() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *DistributorBlockAttributes) GetStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *DistributorBlockAttributes) SetStatus(v string) {
	o.Status = v
}

// GetBlockedAt returns the BlockedAt field value
func (o *DistributorBlockAttributes) GetBlockedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.BlockedAt
}

// GetBlockedAtOk returns a tuple with the BlockedAt field value
// and a boolean to check if the value has been set.
func (o *DistributorBlockAttributes) GetBlockedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BlockedAt, true
}

// SetBlockedAt sets field value
func (o *DistributorBlockAttributes) SetBlockedAt(v time.Time) {
	o.BlockedAt = v
}

// GetCancelledAt returns the CancelledAt field value if set, zero value otherwise.
func (o *DistributorBlockAttributes) GetCancelledAt() time.Time {
	if o == nil || IsNil(o.CancelledAt) {
		var ret time.Time
		return ret
	}
	return *o.CancelledAt
}

// GetCancelledAtOk returns a tuple with the CancelledAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DistributorBlockAttributes) GetCancelledAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.CancelledAt) {
		return nil, false
	}
	return o.CancelledAt, true
}

// HasCancelledAt returns a boolean if a field has been set.
func (o *DistributorBlockAttributes) HasCancelledAt() bool {
	if o != nil && !IsNil(o.CancelledAt) {
		return true
	}

	return false
}

// SetCancelledAt gets a reference to the given time.Time and assigns it to the CancelledAt field.
func (o *DistributorBlockAttributes) SetCancelledAt(v time.Time) {
	o.CancelledAt = &v
}

func (o DistributorBlockAttributes) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DistributorBlockAttributes) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["distributor_id"] = o.DistributorId
	toSerialize["initiator_id"] = o.InitiatorId
	toSerialize["reason"] = o.Reason
	toSerialize["status"] = o.Status
	toSerialize["blocked_at"] = o.BlockedAt
	if !IsNil(o.CancelledAt) {
		toSerialize["cancelled_at"] = o.CancelledAt
	}
	return toSerialize, nil
}

func (o *DistributorBlockAttributes) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"distributor_id",
		"initiator_id",
		"reason",
		"status",
		"blocked_at",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varDistributorBlockAttributes := _DistributorBlockAttributes{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varDistributorBlockAttributes)

	if err != nil {
		return err
	}

	*o = DistributorBlockAttributes(varDistributorBlockAttributes)

	return err
}

type NullableDistributorBlockAttributes struct {
	value *DistributorBlockAttributes
	isSet bool
}

func (v NullableDistributorBlockAttributes) Get() *DistributorBlockAttributes {
	return v.value
}

func (v *NullableDistributorBlockAttributes) Set(val *DistributorBlockAttributes) {
	v.value = val
	v.isSet = true
}

func (v NullableDistributorBlockAttributes) IsSet() bool {
	return v.isSet
}

func (v *NullableDistributorBlockAttributes) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDistributorBlockAttributes(val *DistributorBlockAttributes) *NullableDistributorBlockAttributes {
	return &NullableDistributorBlockAttributes{value: val, isSet: true}
}

func (v NullableDistributorBlockAttributes) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDistributorBlockAttributes) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


