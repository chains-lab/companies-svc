openapi: 3.0.0
info:
  description: SSO REST API for Cifra app
  title: Cifra SSO REST API
  version: 0.0.1
servers:
- url: /
paths:
  /test:
    post:
      description: Test
      responses:
        "201":
          description: successfully
      tags:
      - Test
components:
  schemas:
    CreateCompany:
      properties:
        data:
          $ref: '#/components/schemas/CreateCompany_data'
      required:
      - data
      type: object
    CreateCompanyBlock:
      properties:
        data:
          $ref: '#/components/schemas/CreateCompanyBlock_data'
      required:
      - data
      type: object
    CreateEmployeeInvite:
      properties:
        data:
          $ref: '#/components/schemas/CreateEmployeeInvite_data'
      required:
      - data
      type: object
    UpdateCompany:
      properties:
        data:
          $ref: '#/components/schemas/UpdateCompany_data'
      required:
      - data
      type: object
    UpdateCompanyStatus:
      properties:
        data:
          $ref: '#/components/schemas/UpdateCompanyStatus_data'
      required:
      - data
      type: object
    PaginationData:
      properties:
        page_number:
          description: The current page number.
          example: 1
          format: int64
          type: integer
        page_size:
          description: The number of items per page.
          example: 10
          format: int64
          type: integer
        total_items:
          description: The total number of items available.
          example: 100
          format: int64
          type: integer
      required:
      - page_number
      - page_size
      - total_items
      type: object
    Errors:
      description: Standard JSON:API error
      properties:
        errors:
          description: Non empty array of errors occurred during request processing
          items:
            $ref: '#/components/schemas/Errors_errors_inner'
          type: array
      required:
      - errors
      type: object
    Employee:
      properties:
        data:
          $ref: '#/components/schemas/EmployeeData'
      required:
      - data
      type: object
    EmployeeData:
      properties:
        id:
          description: user id
          format: uuid
          type: string
        type:
          enum:
          - employee
          type: string
        attributes:
          $ref: '#/components/schemas/EmployeeAttributes'
      required:
      - attributes
      - id
      - type
      type: object
    EmployeeAttributes:
      properties:
        username:
          description: The username of the employee within the company's system.
          type: string
        avatar:
          description: A URL pointing to the employee's avatar image.
          format: uri
          type: string
        company_id:
          description: The unique identifier for the company associated with the employee.
          format: uuid
          type: string
        role:
          description: "The role of the employee within the company's organization\
            \ (e.g., manager, staff)."
          type: string
        created_at:
          description: The timestamp when the employee record was created.
          format: date-time
          type: string
        updated_at:
          description: The timestamp when the employee record was last updated.
          format: date-time
          type: string
      required:
      - avatar
      - company_id
      - created_at
      - role
      - updated_at
      - username
      type: object
    EmployeesCollection:
      properties:
        data:
          items:
            $ref: '#/components/schemas/EmployeeData'
          type: array
        links:
          $ref: '#/components/schemas/PaginationData'
      required:
      - data
      - links
      type: object
    Invite:
      properties:
        data:
          $ref: '#/components/schemas/InviteData'
      required:
      - data
      type: object
    InviteData:
      properties:
        id:
          description: invite id
          format: uuid
          type: string
        type:
          enum:
          - company_invite
          type: string
        attributes:
          $ref: '#/components/schemas/InviteAttributes'
      required:
      - attributes
      - id
      - type
      type: object
    InviteAttributes:
      properties:
        status:
          description: status of the invite
          type: string
        role:
          description: role of the user in this city
          type: string
        company_id:
          description: company id
          format: uuid
          type: string
        token:
          description: unique token for the invite
          type: string
        expires_at:
          description: timestamp when the invite will expire
          format: date-time
          type: string
        created_at:
          description: timestamp when the invite was created
          format: date-time
          type: string
      required:
      - company_id
      - created_at
      - expires_at
      - role
      - status
      - token
      type: object
    SentInvite:
      properties:
        data:
          $ref: '#/components/schemas/SentInvite_data'
      required:
      - data
      type: object
    Company:
      properties:
        data:
          $ref: '#/components/schemas/CompanyData'
      required:
      - data
      type: object
    CompanyData:
      properties:
        id:
          description: company id
          format: uuid
          type: string
        type:
          enum:
          - company
          type: string
        attributes:
          $ref: '#/components/schemas/CompanyAttributes'
      required:
      - attributes
      - id
      - type
      type: object
    CompanyAttributes:
      properties:
        icon:
          description: URL to the company's icon image.
          format: uri
          type: string
        name:
          description: The name of the company.
          type: string
        status:
          description: "The current status of the company (e.g., active, inactive)."
          type: string
        updated_at:
          description: The timestamp of the last update to the company's information.
          format: date-time
          type: string
        created_at:
          format: date-time
          type: string
      required:
      - created_at
      - icon
      - name
      - status
      - updated_at
      type: object
    CompaniesCollection:
      properties:
        data:
          items:
            $ref: '#/components/schemas/CompanyData'
          type: array
        links:
          $ref: '#/components/schemas/PaginationData'
      required:
      - data
      - links
      type: object
    CompanyBlock:
      properties:
        data:
          $ref: '#/components/schemas/CompanyBlockData'
      required:
      - data
      type: object
    CompanyBlockData:
      properties:
        id:
          description: company block id
          format: uuid
          type: string
        type:
          enum:
          - company_block
          type: string
        attributes:
          $ref: '#/components/schemas/CompanyBlockAttributes'
      required:
      - attributes
      - id
      - type
      type: object
    CompanyBlockAttributes:
      properties:
        company_id:
          description: ID of the company being blocked
          example: 550e8400-e29b-41d4-a716-446655440000
          format: uuid
          type: string
        initiator_id:
          description: ID of the user who initiated the block
          example: 660e8400-e29b-41d4-a716-446655440000
          format: uuid
          type: string
        reason:
          description: Reason for blocking the company
          example: Violation of terms of service
          type: string
        status:
          description: Current status of the block
          example: active
          type: string
        blocked_at:
          description: Timestamp when the block was initiated
          example: 2023-10-01T12:00:00Z
          format: date-time
          type: string
        cancelled_at:
          description: "Timestamp when the block was lifted, if applicable"
          example: 2023-10-15T12:00:00Z
          format: date-time
          type: string
      required:
      - blocked_at
      - company_id
      - initiator_id
      - reason
      - status
      type: object
    CompanyBlocksCollection:
      properties:
        data:
          items:
            $ref: '#/components/schemas/CompanyBlockData'
          type: array
        links:
          $ref: '#/components/schemas/PaginationData'
      required:
      - data
      - links
      type: object
    CreateCompany_data_attributes:
      properties:
        icon:
          description: URL to the company's icon image.
          format: uri
          type: string
        name:
          description: The name of the company.
          type: string
      required:
      - icon
      - name
      type: object
    CreateCompany_data:
      properties:
        type:
          enum:
          - create_company
          type: string
        attributes:
          $ref: '#/components/schemas/CreateCompany_data_attributes'
      required:
      - attributes
      - type
      type: object
    CreateCompanyBlock_data_attributes:
      properties:
        company_id:
          description: The UUID of the company to be blocked.
          format: uuid
          type: string
        reason:
          description: The reason for blocking the company.
          type: string
      required:
      - company_id
      - reason
      type: object
    CreateCompanyBlock_data:
      properties:
        type:
          enum:
          - block_company
          type: string
        attributes:
          $ref: '#/components/schemas/CreateCompanyBlock_data_attributes'
      required:
      - attributes
      - type
      type: object
    CreateEmployeeInvite_data_attributes:
      properties:
        company_id:
          description: The UUID of the company to which the user is being invited.
          format: uuid
          type: string
        user_id:
          description: The UUID of the user being invited.
          format: uuid
          type: string
        role:
          description: The role assigned to the invited user within the company.
          enum:
          - admin
          - member
          type: string
      required:
      - company_id
      - role
      - user_id
      type: object
    CreateEmployeeInvite_data:
      properties:
        type:
          enum:
          - send_employee_invite
          type: string
        attributes:
          $ref: '#/components/schemas/CreateEmployeeInvite_data_attributes'
      required:
      - attributes
      - type
      type: object
    UpdateCompany_data_attributes:
      properties:
        icon:
          description: URL to the company's icon image.
          format: uri
          type: string
        name:
          description: The name of the company.
          type: string
      type: object
    UpdateCompany_data:
      properties:
        id:
          description: The UUID of the company to be updated.
          format: uuid
          type: string
        type:
          enum:
          - update_company
          type: string
        attributes:
          $ref: '#/components/schemas/UpdateCompany_data_attributes'
      required:
      - attributes
      - id
      - type
      type: object
    UpdateCompanyStatus_data_attributes:
      properties:
        status:
          description: The new status of the company.
          enum:
          - active
          - inactive
          type: string
      required:
      - status
      type: object
    UpdateCompanyStatus_data:
      properties:
        id:
          description: The UUID of the company to be updated.
          format: uuid
          type: string
        type:
          enum:
          - update_company_status
          type: string
        attributes:
          $ref: '#/components/schemas/UpdateCompanyStatus_data_attributes'
      required:
      - attributes
      - id
      - type
      type: object
    Errors_errors_inner:
      properties:
        title:
          description: "Title is a short, human-readable summary of the problem"
          example: Bad Request
          type: string
        detail:
          description: Detail is a human-readable explanation specific to this occurrence
            of the problem
          example: Request body was expected
          type: string
        status:
          description: Status is the HTTP status code applicable to this problem
          enum:
          - 400
          - 401
          - 403
          - 404
          - 409
          - 500
          example: 400
          type: integer
      required:
      - status
      - title
      type: object
    SentInvite_data_attributes:
      properties:
        company_id:
          description: ID of the company the invite is for
          format: uuid
          type: string
        role:
          description: Role assigned to the invited user
          type: string
      required:
      - company_id
      - role
      type: object
    SentInvite_data:
      properties:
        id:
          description: invite id
          format: uuid
          type: string
        type:
          enum:
          - company_invite
          type: string
        attributes:
          $ref: '#/components/schemas/SentInvite_data_attributes'
      required:
      - attributes
      - id
      - type
      type: object
